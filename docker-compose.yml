services:
  postgres:
    image: postgres:latest
    container_name: management-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: coreManagement
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: management-django
    build:
      context: ./CoresService
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./CoresService:/app/
    ports:
      - "8000:8000"
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DEBUG=True
      - SECRET_KEY=HereIsYourSecret_Keyqweroqpowek12312313
      - DATABASE_NAME=coreManagement
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=admin
      - DATABASE_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
      - rabbitmq

  rabbitmq:
    image:  rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:6572"
      - "15672:15672"


  celery:
    container_name: management-celery
    build:
      context: ./CoresService
      dockerfile: Dockerfile
    command: celery --app=CoreManagement worker -l INFO -Q tasks,
    volumes:
      - ./CoresService:/app/
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - DEBUG=True
      - SECRET_KEY=HereIsYourSecret_Keyqweroqpowek12312313
    depends_on:
      - django
      - rabbitmq

#  stand_lone_celery:
#    container_name: stand_lone_celery
#    build:
#      context: ./celery_worker
#      dockerfile: Dockerfile
#    command: celery -A celery_base worker -l INFO -Q queue2
#    volumes:
#      - ./celery_worker:/app/
#    environment:
#      - BROKER_URL=redis://redis:6379/1
#      - RESULT_BACKEND=redis://redis:6379/1
#    depends_on:
#      - postgres
#      - redis
#      - django

volumes:
  postgres_data:

